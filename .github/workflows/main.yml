name: Python CI/CD Pipeline

on:
  push:
    branches-ignore: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install  
          
      - name: Run tests with pytest
        run: |
          export DATABASE_URL=sqlite+aiosqlite:///:memory:
          poetry run pytest --cov=src --cov-report=term-missing

  build-and-push:
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dag-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/dag-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/dag
            docker pull ${{ secrets.DOCKER_USERNAME }}/dag-service:latest
            docker compose up -d --build  
            echo "Success"
